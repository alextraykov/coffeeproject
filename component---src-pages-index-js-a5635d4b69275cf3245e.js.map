{"version":3,"sources":["webpack:///./src/style/global/GlobalStyle.js","webpack:///./src/components/BlogCard/BlogCard.js","webpack:///./src/pages/index.js"],"names":["GlobalStyle","createGlobalStyle","Conatainer","styled","div","item","large","Image","src","TextBox","Title","h1","Subtitle","h3","Icon","CoffeeSvg","img","Text","p","Button","Link","BlogCard","props","featuredImage","to","activeStyle","color","query","IndexPage","data","allFile","edges","map","post","index","node","childMarkdownRemark","frontmatter","childImageSharp","original","key"],"mappings":"0iCAEA,IAoCeA,EApCKC,YAAH,K,wBCEXC,EAAaC,IAAOC,IAAV,uEAAGD,CAAH,2HACL,SAAAE,GAAI,OAAKA,EAAKC,MAAQ,OAAS,WAC3B,SAAAD,GAAI,OAAKA,EAAKC,MAAQ,QAAU,UACnC,SAAAD,GAAI,OAAKA,EAAKC,MAAQ,QAAU,WAExB,SAAAD,GAAI,OAAKA,EAAKC,MAAQ,MAAQ,YAK5CC,EAAQJ,IAAOC,IAAV,kEAAGD,CAAH,kGACC,SAAAE,GAAI,OAAKA,EAAKC,MAAQ,OAAS,WAChC,SAAAD,GAAI,OAAKA,EAAKC,MAAQ,QAAU,UACtB,SAAAD,GACjB,OAAOA,EAAKG,OAMVC,EAAUN,IAAOC,IAAV,oEAAGD,CAAH,gJAQA,SAAAE,GAAI,OAAKA,EAAKC,MAAQ,OAAS,eAGtCI,EAAQP,IAAOQ,GAAV,kEAAGR,CAAH,2FACI,SAAAE,GAAI,OAAKA,EAAKC,MAAQ,OAAS,UAI1B,SAAAD,GAAI,OAAKA,EAAKC,MAAQ,SAAW,MAG/CM,EAAWT,IAAOU,GAAV,qEAAGV,CAAH,qEACC,SAAAE,GAAI,OAAKA,EAAKC,MAAQ,OAAS,UAC7B,SAAAD,GAAI,OAAKA,EAAKC,MAAQ,OAAS,UAK1CQ,EAAOX,IAAOC,IAAV,iEAAGD,CAAH,mKAaJY,EAAYZ,IAAOa,IAAV,sEAAGb,CAAH,MAETc,EAAOd,IAAOe,EAAV,iEAAGf,CAAH,kEAIK,SAAAE,GAAI,OAAKA,EAAKC,MAAQ,QAAU,MAGzCa,EAAShB,YAAOiB,KAAV,mEAAGjB,CAAH,8HAiCGkB,EAvBE,SAAAC,GACf,OACE,kBAACpB,EAAD,CAAYI,MAAOgB,EAAMhB,OACvB,kBAACC,EAAD,CAAOC,IAAKc,EAAMC,cAAejB,MAAOgB,EAAMhB,QAC9C,kBAACG,EAAD,CAASH,MAAOgB,EAAMhB,OACpB,kBAACI,EAAD,CAAOJ,MAAOgB,EAAMhB,OAApB,QACA,kBAACM,EAAD,CAAUN,MAAOgB,EAAMhB,OAAvB,QACA,kBAACQ,EAAD,KACE,kBAACC,EAAD,CAAWP,IAAKc,EAAMC,iBAExB,kBAACN,EAAD,CAAMX,MAAOgB,EAAMhB,OAAnB,mKAKA,kBAACa,EAAD,CAAQK,GAAG,QAAQC,YAAa,CAAEC,MAAO,QAAzC,uBCjGR,sCAQA,IAsBaC,EAAK,aA2BHC,UAjDG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACGA,EAAKC,QAAQC,MAAMC,KAAI,SAACC,EAAMC,GAC7B,OACE,kBAAC,EAAD,CACEX,cACEU,EAAKE,KAAKC,oBAAoBC,YAAYd,cACvCe,gBAAgBC,SAAS/B,IAE9BF,OAAK,EACLkC,IAAKN","file":"component---src-pages-index-js-a5635d4b69275cf3245e.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    @font-face {\r\n        font-family: 'Inter';\r\n        src: url('../fonts/Inter-Regular.ttf') format('truetype');\r\n        font-weight: normal;\r\n        font-style: normal;\r\n    }\r\n\r\n    @font-face {\r\n        font-family: 'Cinzel Decorative';\r\n        src: url('../fonts/PlayFairDisplaySC-Regular.ttf') format('truetype');\r\n        font-weight: normal;\r\n        font-style: normal;\r\n    }\r\n\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n        font-size: 1em;\r\n        line-height: 1;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    html {\r\n        font-family: sans-serif;\r\n        -ms-text-size-adjust: 100%;\r\n        -webkit-text-size-adjust: 100%;\r\n    }\r\n\r\n    body {\r\n        font-family: 'Cinzel Decorative';\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Conatainer = styled.div`\r\n  width: ${item => (item.large ? \"100%\" : \"300px\")};\r\n  max-width: ${item => (item.large ? \"950px\" : \"none\")};\r\n  height: ${item => (item.large ? \"305px\" : \"345px\")};\r\n  display: flex;\r\n  flex-direction: ${item => (item.large ? \"row\" : \"column\")};\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  height: ${item => (item.large ? \"100%\" : \"150px\")};\r\n  width: ${item => (item.large ? \"305px\" : \"100%\")};\r\n  background: url(\"${item => {\r\n    return item.src;\r\n  }}\");\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nconst TextBox = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  position: relative;\r\n  padding: ${item => (item.large ? \"32px\" : \"32px 16px\")};\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: ${item => (item.large ? \"28px\" : \"20px\")};\r\n  line-height: 27px;\r\n  font-weight: bold;\r\n  margin-bottom: 8px;\r\n  letter-spacing: ${item => (item.large ? \"0.05em\" : \"\")};\r\n`;\r\n\r\nconst Subtitle = styled.h3`\r\n  font-size: ${item => (item.large ? \"21px\" : \"18px\")};\r\n  line-height: ${item => (item.large ? \"23px\" : \"21px\")};\r\n  color: #473e34;\r\n  margin-bottom: 21px;\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  background: #fcf5ed;\r\n  width: 56px;\r\n  height: 56px;\r\n  position: absolute;\r\n  right: 16px;\r\n  top: 32px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CoffeeSvg = styled.img``;\r\n\r\nconst Text = styled.p`\r\n  font-size: 14px;\r\n  line-height: 150%;\r\n  color: #333333;\r\n  max-width: ${item => (item.large ? \"440px\" : \"\")};\r\n`;\r\n\r\nconst Button = styled(Link)`\r\n  height: 40px;\r\n  font-size: 16px;\r\n  text-decoration: none;\r\n  color: #473e34;\r\n  border: 1px solid #473e34;\r\n  padding: 6px 32px;\r\n  margin-top: auto;\r\n`;\r\n\r\nconst BlogCard = props => {\r\n  return (\r\n    <Conatainer large={props.large}>\r\n      <Image src={props.featuredImage} large={props.large} />\r\n      <TextBox large={props.large}>\r\n        <Title large={props.large}>Test</Title>\r\n        <Subtitle large={props.large}>Test</Subtitle>\r\n        <Icon>\r\n          <CoffeeSvg src={props.featuredImage} />\r\n        </Icon>\r\n        <Text large={props.large}>\r\n          This method is meant to mimic a traditional pour over like a v60 or\r\n          Beehouse. I find that this method is good for showing off sweetness\r\n          and balance in the cup.\r\n        </Text>\r\n        <Button to=\"/test\" activeStyle={{ color: \"red\" }}>\r\n          Read the article\r\n        </Button>\r\n      </TextBox>\r\n    </Conatainer>\r\n  );\r\n};\r\n\r\nexport default BlogCard;\r\n","import React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport GlobalStyle from \"../style/global/GlobalStyle\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport BlogCard from \"../components/BlogCard/BlogCard\";\r\n\r\nconst IndexPage = ({ data }) => {\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Layout>\r\n        {data.allFile.edges.map((post, index) => {\r\n          return (\r\n            <BlogCard\r\n              featuredImage={\r\n                post.node.childMarkdownRemark.frontmatter.featuredImage\r\n                  .childImageSharp.original.src\r\n              }\r\n              large\r\n              key={index}\r\n            />\r\n          );\r\n        })}\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query IndexPageQuery {\r\n    allFile(filter: { relativePath: { regex: \"/^posts//\" } }) {\r\n      edges {\r\n        node {\r\n          childMarkdownRemark {\r\n            frontmatter {\r\n              date\r\n              excerpt\r\n              path\r\n              tags\r\n              title\r\n              featuredImage {\r\n                childImageSharp {\r\n                  original {\r\n                    src\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          relativePath\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default IndexPage;\r\n"],"sourceRoot":""}